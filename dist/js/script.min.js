"use strict";function geodGBL(){var e;"undefined"==(e=void 0===EARTH_A?"undefined":_typeof(EARTH_A))&&wgs84()}function earthcon(e,t){var n,a,r,i,s;i=Number(e),s=Number(t),n=1-s/i,r=1-s*s/(i*i),a=Math.sqrt(r),EARTH_A=i,EARTH_B=s,EARTH_F=n,EARTH_Ecc=a,EARTH_Esq=r}function wgs84(){var e,t,n;e=6378.137,n=1/298.257223563,t=e*(1-n),earthcon(e,t)}function radcur(e){var t,n,a,r,i,s,o,c,u,l,h,d,p,m,f,v,y=new Array(3),b=Math.PI/180;return geodGBL(),t=EARTH_A,n=EARTH_B,r=t*t,i=n*n,s=1-i/r,Math.sqrt(s),a=Number(e),o=Math.cos(b*a),c=Math.sin(b*a),u=1-s*c*c,l=Math.sqrt(u),h=t/l,d=h*(1-s)/u,p=h*o,v=(1-s)*h*c,m=p*p+v*v,f=Math.sqrt(m),y[0]=f,y[1]=h,y[2]=d,y}function rearth(e){var t,n;return n=Number(e),t=radcur(n),t[0]}function gc2gd(e,t){var n,a,r,i,s,o,c,u,l,h=Math.PI/180,d=1/h,p=new Array(3);return geodGBL(),a=Number(e),r=Number(t),s=EARTH_Ecc,o=s*s,u=r,p=radcur(a),i=p[1],l=1-o*i/(i+u),c=Math.tan(h*a)/l,n=d*Math.atan(c),p=radcur(n),i=p[1],l=1-o*i/(i+u),c=Math.tan(h*a)/l,n=d*Math.atan(c)}function gd2gc(e,t){var n,a,r,i,s,o,c,u,l=Math.PI/180,h=1/l,d=new Array(3);return geodGBL(),n=Number(e),a=Number(t),i=EARTH_Ecc,s=i*i,c=a,d=radcur(n),r=d[1],u=1-s*r/(r+c),o=Math.tan(l*n)*u,h*Math.atan(o)}function llenu(e,t){var n,a,r,i,s,o,c,u=new Array(3),l=new Array(3),h=new Array(3),d=new Array(3),r=Math.PI/180;return n=Number(e),a=Number(t),i=Math.cos(r*n),s=Math.sin(r*n),o=Math.cos(r*a),c=Math.sin(r*a),u[0]=-c,u[1]=o,u[2]=0,l[0]=-o*s,l[1]=-c*s,l[2]=i,h[0]=o*i,h[1]=c*i,h[2]=s,d[0]=u,d[1]=l,d[2]=h,d}function xyzllh(e){var t,n,a,r,i,s,o,c,u,l,h,d,p,m,f,v,y,b,A,E=Math.PI/180,M=new Array(3),_=new Array(3);if(geodGBL(),m=EARTH_Esq,s=e[0],o=e[1],c=e[2],s=Number(s),o=Number(o),c=Number(c),i=Math.sqrt(s*s+o*o+c*c),t=Math.asin(c/i)/E,h=Math.abs(s)+Math.abs(o),b=h<1e-10?0:Math.atan2(o,s)/E,b<0&&(b+=360),(u=Math.sqrt(s*s+o*o))<1e-10)return y=90,c<0&&(y=-90),A=i-rearth(y),_[0]=y,_[1]=b,_[2]=A,_;r=rearth(t),A=i-r,y=gc2gd(t,A),M=radcur(y),p=M[1];for(var d=0;d<5&&(v=Math.sin(E*y),l=(c+p*m*v)/u,n=Math.atan(l)/E,a=n-y,y=n,f=Math.cos(E*y),M=radcur(y),p=M[1],A=u/f-p,!(Math.abs(a)<1e-12));d++);return _[0]=y,_[1]=b,_[2]=A,_}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},EARTH_A,EARTH_B,EARTH_F,EARTH_Ecc,EARTH_Esq,_createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),viewer=new Cesium.Viewer("cesiumContainer",{fullscreenButton:!1,baseLayerPicker:!1,timeline:!1,homeButton:!1,infoBoxe:!1,navigationHelpButton:!1,selectionIndicator:!1,vrButton:!1,geocoder:!1,sceneModePicker:!1,animation:!1});document.querySelector(".cesium-viewer-bottom").style.display="none";for(var sat=function(){function e(t,n,a,r,i){_classCallCheck(this,e);var s=this;this.name=t,this.date=a,this.id=n,this.true_pos=i,this.pos=xyzllh(i),this.infos=r,this.object=new Cesium.Entity({id:this.id,name:this.name,position:new Cesium.Cartesian3.fromDegrees(this.pos[0],this.pos[1],1e3*this.pos[2]),ellipsoid:{radii:new Cesium.Cartesian3(5e4,5e4,5e4),material:Cesium.Color.RED},label:{text:this.name,font:"10pt monospace",style:Cesium.LabelStyle.FILL_AND_OUTLINE,outlineWidth:2,verticalOrigin:Cesium.VerticalOrigin.BOTTOM,pixelOffset:new Cesium.Cartesian2(0,-25)}}),this.popup=new Cesium.Entity(this.name),this.popup.description={getValue:function(){return'<div class="pop_up"><div class="exit"></div><h2>'+s.name+"</h2><p>Lauched : "+s.date+"</p><p> Country : "+s.infos.country+"</p><p> Function : "+s.infos.discipline+"</p><p> Mass : "+s.infos.mass+"</p><p>Description : "+s.infos.description+"</p></div>"}},this.create()}return _createClass(e,[{key:"create",value:function(){viewer.entities.add(this.object)}}]),e}(),satellites=[],i=0;i<sats.length;i++)satellites.push(new sat(sats[i].name,sats[i].id,sats[i].date,sats[i].infos,sats[i].pos));console.log(satellites);var handler=new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas);handler.setInputAction(function(e){for(var t=viewer.scene.pick(e.position),n=0;n<satellites.length;n++)Cesium.defined(t)&&t.id==satellites[n].object&&(viewer.selectedEntity=satellites[n].popup)},Cesium.ScreenSpaceEventType.LEFT_CLICK);var cross=document.querySelector("#cross"),menu=document.querySelector(".left_menu"),cross_div=document.querySelector(".exit");cross.addEventListener("click",function(){"true"==this.getAttribute("data-open")?(this.setAttribute("data-open",!1),menu.classList.remove("active"),cross_div.classList.remove("active")):(this.setAttribute("data-open",!0),menu.classList.add("active"),cross_div.classList.add("active"))});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
