"use strict";function geodGBL(){var t;"undefined"==(t=void 0===EARTH_A?"undefined":_typeof(EARTH_A))&&wgs84()}function earthcon(t,e){var a,r,n,i,s;i=Number(t),s=Number(e),a=1-s/i,n=1-s*s/(i*i),r=Math.sqrt(n),EARTH_A=i,EARTH_B=s,EARTH_F=a,EARTH_Ecc=r,EARTH_Esq=n}function wgs84(){var t,e,a;t=6378.137,a=1/298.257223563,e=t*(1-a),earthcon(t,e)}function radcur(t){var e,a,r,n,i,s,o,u,c,h,l,f,m,y,d,b,M=new Array(3),A=Math.PI/180;return geodGBL(),e=EARTH_A,a=EARTH_B,n=e*e,i=a*a,s=1-i/n,Math.sqrt(s),r=Number(t),o=Math.cos(A*r),u=Math.sin(A*r),c=1-s*u*u,h=Math.sqrt(c),l=e/h,f=l*(1-s)/c,m=l*o,b=(1-s)*l*u,y=m*m+b*b,d=Math.sqrt(y),M[0]=d,M[1]=l,M[2]=f,M}function rearth(t){var e,a;return a=Number(t),e=radcur(a),e[0]}function gc2gd(t,e){var a,r,n,i,s,o,u,c,h,l=Math.PI/180,f=1/l,m=new Array(3);return geodGBL(),r=Number(t),n=Number(e),s=EARTH_Ecc,o=s*s,c=n,m=radcur(r),i=m[1],h=1-o*i/(i+c),u=Math.tan(l*r)/h,a=f*Math.atan(u),m=radcur(a),i=m[1],h=1-o*i/(i+c),u=Math.tan(l*r)/h,a=f*Math.atan(u)}function gd2gc(t,e){var a,r,n,i,s,o,u,c,h=Math.PI/180,l=1/h,f=new Array(3);return geodGBL(),a=Number(t),r=Number(e),i=EARTH_Ecc,s=i*i,u=r,f=radcur(a),n=f[1],c=1-s*n/(n+u),o=Math.tan(h*a)*c,l*Math.atan(o)}function llenu(t,e){var a,r,n,i,s,o,u,c=new Array(3),h=new Array(3),l=new Array(3),f=new Array(3),n=Math.PI/180;return a=Number(t),r=Number(e),i=Math.cos(n*a),s=Math.sin(n*a),o=Math.cos(n*r),u=Math.sin(n*r),c[0]=-u,c[1]=o,c[2]=0,h[0]=-o*s,h[1]=-u*s,h[2]=i,l[0]=o*i,l[1]=u*i,l[2]=s,f[0]=c,f[1]=h,f[2]=l,f}function xyzllh(t){var e,a,r,n,i,s,o,u,c,h,l,f,m,y,d,b,M,A,E,p=Math.PI/180,_=new Array(3),w=new Array(3);if(geodGBL(),y=EARTH_Esq,s=t[0],o=t[1],u=t[2],s=Number(s),o=Number(o),u=Number(u),i=Math.sqrt(s*s+o*o+u*u),e=Math.asin(u/i)/p,l=Math.abs(s)+Math.abs(o),A=l<1e-10?0:Math.atan2(o,s)/p,A<0&&(A+=360),(c=Math.sqrt(s*s+o*o))<1e-10)return M=90,u<0&&(M=-90),E=i-rearth(M),w[0]=M,w[1]=A,w[2]=E,w;n=rearth(e),E=i-n,M=gc2gd(e,E),_=radcur(M),m=_[1];for(var f=0;f<5&&(b=Math.sin(p*M),h=(u+m*y*b)/c,a=Math.atan(h)/p,r=a-M,M=a,d=Math.cos(p*M),_=radcur(M),m=_[1],E=c/d-m,!(Math.abs(r)<1e-12));f++);return w[0]=M,w[1]=A,w[2]=E,w}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},EARTH_A,EARTH_B,EARTH_F,EARTH_Ecc,EARTH_Esq,_createClass=function(){function t(t,e){for(var a=0;a<e.length;a++){var r=e[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,a,r){return a&&t(e.prototype,a),r&&t(e,r),e}}(),viewer=new Cesium.Viewer("cesiumContainer",{fullscreenButton:!1,baseLayerPicker:!1,timeline:!1,homeButton:!1,infoBoxe:!1,navigationHelpButton:!1,selectionIndicator:!1,vrButton:!1,geocoder:!1,sceneModePicker:!1,animation:!1});document.querySelector(".cesium-viewer-bottom").style.display="none";for(var sat=function(){function t(e,a,r,n,i){_classCallCheck(this,t),this.name=e,this.date=r,this.id=a,this.true_pos=i,this.pos=xyzllh(i),this.infos=n,this.object=new Cesium.Entity({id:this.id,name:this.name,position:new Cesium.Cartesian3.fromDegrees(this.pos[0],this.pos[1],1e3*this.pos[2]),ellipsoid:{radii:new Cesium.Cartesian3(5e4,5e4,5e4),material:Cesium.Color.RED},label:{text:this.name,font:"10pt monospace",style:Cesium.LabelStyle.FILL_AND_OUTLINE,outlineWidth:2,verticalOrigin:Cesium.VerticalOrigin.BOTTOM,pixelOffset:new Cesium.Cartesian2(0,-25)}}),this.create()}return _createClass(t,[{key:"create",value:function(){viewer.entities.add(this.object)}}]),t}(),satellites=[],i=0;i<sats.length;i++)satellites.push(new sat(sats[i].name,sats[i].id,sats[i].date,sats[i].infos,sats[i].pos));console.log(satellites);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
