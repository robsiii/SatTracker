"use strict";function geodGBL(){var e;"undefined"==(e=void 0===EARTH_A?"undefined":_typeof(EARTH_A))&&wgs84()}function earthcon(e,t){var a,r,n,i,s;i=Number(e),s=Number(t),a=1-s/i,n=1-s*s/(i*i),r=Math.sqrt(n),EARTH_A=i,EARTH_B=s,EARTH_F=a,EARTH_Ecc=r,EARTH_Esq=n}function wgs84(){var e,t,a;e=6378.137,a=1/298.257223563,t=e*(1-a),earthcon(e,t)}function radcur(e){var t,a,r,n,i,s,o,u,c,l,h,p,d,m,f,v,b=new Array(3),y=Math.PI/180;return geodGBL(),t=EARTH_A,a=EARTH_B,n=t*t,i=a*a,s=1-i/n,Math.sqrt(s),r=Number(e),o=Math.cos(y*r),u=Math.sin(y*r),c=1-s*u*u,l=Math.sqrt(c),h=t/l,p=h*(1-s)/c,d=h*o,v=(1-s)*h*u,m=d*d+v*v,f=Math.sqrt(m),b[0]=f,b[1]=h,b[2]=p,b}function rearth(e){var t,a;return a=Number(e),t=radcur(a),t[0]}function gc2gd(e,t){var a,r,n,i,s,o,u,c,l,h=Math.PI/180,p=1/h,d=new Array(3);return geodGBL(),r=Number(e),n=Number(t),s=EARTH_Ecc,o=s*s,c=n,d=radcur(r),i=d[1],l=1-o*i/(i+c),u=Math.tan(h*r)/l,a=p*Math.atan(u),d=radcur(a),i=d[1],l=1-o*i/(i+c),u=Math.tan(h*r)/l,a=p*Math.atan(u)}function gd2gc(e,t){var a,r,n,i,s,o,u,c,l=Math.PI/180,h=1/l,p=new Array(3);return geodGBL(),a=Number(e),r=Number(t),i=EARTH_Ecc,s=i*i,u=r,p=radcur(a),n=p[1],c=1-s*n/(n+u),o=Math.tan(l*a)*c,h*Math.atan(o)}function llenu(e,t){var a,r,n,i,s,o,u,c=new Array(3),l=new Array(3),h=new Array(3),p=new Array(3),n=Math.PI/180;return a=Number(e),r=Number(t),i=Math.cos(n*a),s=Math.sin(n*a),o=Math.cos(n*r),u=Math.sin(n*r),c[0]=-u,c[1]=o,c[2]=0,l[0]=-o*s,l[1]=-u*s,l[2]=i,h[0]=o*i,h[1]=u*i,h[2]=s,p[0]=c,p[1]=l,p[2]=h,p}function xyzllh(e){var t,a,r,n,i,s,o,u,c,l,h,p,d,m,f,v,b,y,A,g=Math.PI/180,E=new Array(3),S=new Array(3);if(geodGBL(),m=EARTH_Esq,s=e[0],o=e[1],u=e[2],s=Number(s),o=Number(o),u=Number(u),i=Math.sqrt(s*s+o*o+u*u),t=Math.asin(u/i)/g,h=Math.abs(s)+Math.abs(o),y=h<1e-10?0:Math.atan2(o,s)/g,y<0&&(y+=360),(c=Math.sqrt(s*s+o*o))<1e-10)return b=90,u<0&&(b=-90),A=i-rearth(b),S[0]=b,S[1]=y,S[2]=A,S;n=rearth(t),A=i-n,b=gc2gd(t,A),E=radcur(b),d=E[1];for(var p=0;p<5&&(v=Math.sin(g*b),l=(u+d*m*v)/c,a=Math.atan(l)/g,r=a-b,b=a,f=Math.cos(g*b),E=radcur(b),d=E[1],A=c/f-d,!(Math.abs(r)<1e-12));p++);return S[0]=b,S[1]=y,S[2]=A,S}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function filter_date(e){for(var t=0;t<satellites.length;t++){var a=new Date(satellites[t].date),a=a.getFullYear();e[0]>a||e[1]<a?satellites[t].object.show=!1:satellites[t].object.show=!0}}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},EARTH_A,EARTH_B,EARTH_F,EARTH_Ecc,EARTH_Esq,_createClass=function(){function e(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,a,r){return a&&e(t.prototype,a),r&&e(t,r),t}}(),viewer=new Cesium.Viewer("cesiumContainer",{fullscreenButton:!1,baseLayerPicker:!1,timeline:!1,homeButton:!1,infoBoxe:!1,navigationHelpButton:!1,selectionIndicator:!1,vrButton:!1,geocoder:!1,sceneModePicker:!1,animation:!1});document.querySelector(".cesium-viewer-bottom").style.display="none";for(var sat=function(){function e(t,a,r,n,i){_classCallCheck(this,e);var s=this;this.name=t,this.date=r,this.id=a,this.true_pos=i,this.pos=xyzllh(i),this.infos=n,this.object=new Cesium.Entity({id:this.id,name:this.name,position:new Cesium.Cartesian3.fromDegrees(this.pos[0],this.pos[1],1e3*this.pos[2]),ellipsoid:{radii:new Cesium.Cartesian3(5e4,5e4,5e4),material:Cesium.Color.RED},label:{text:this.name,font:"10pt arial",style:Cesium.LabelStyle.FILL_AND_OUTLINE,outlineWidth:2,verticalOrigin:Cesium.VerticalOrigin.BOTTOM,pixelOffset:new Cesium.Cartesian2(0,-25)}}),this.popup=new Cesium.Entity(s.name),this.popup={title:""},this.popup.description={getValue:function(){return'<div class="pop_up"><div class="exit"></div><h2>'+s.name+"</h2><p>Lauched : "+s.date+"</p><p> Country : "+s.infos.country+"</p><p> Function : "+s.infos.discipline+"</p><p> Mass : "+s.infos.mass+"</p><p>Description : "+s.infos.description+"</p></div>"}},this.create()}return _createClass(e,[{key:"create",value:function(){viewer.entities.add(this.object)}}]),e}(),satellites=[],i=0;i<sats.length;i++)satellites.push(new sat(sats[i].name,sats[i].id,sats[i].date,sats[i].infos,sats[i].pos));console.log(satellites);var handler=new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas);handler.setInputAction(function(e){for(var t=viewer.scene.pick(e.position),a=0;a<satellites.length;a++)Cesium.defined(t)&&t.id==satellites[a].object&&(viewer.selectedEntity=satellites[a].popup)},Cesium.ScreenSpaceEventType.LEFT_CLICK);var parent=document.querySelector(".range-slider"),rangeS=parent.querySelectorAll("input[type=range]"),numberS=parent.querySelectorAll("input[type=number]");rangeS.forEach(function(e){e.oninput=function(){var e=parseFloat(rangeS[0].value),t=parseFloat(rangeS[1].value);if(e>t){var a=[t,e];e=a[0],t=a[1]}numberS[0].value=e,numberS[1].value=t,filter_date([numberS[0].value,numberS[1].value])}}),numberS.forEach(function(e){e.oninput=function(){var e=parseFloat(numberS[0].value),t=parseFloat(numberS[1].value);if(e>t){var a=e;numberS[0].value=t,numberS[1].value=a}rangeS[0].value=e,rangeS[1].value=t,filter_date([rangeS[0].value,rangeS[1].value])}});var cross=document.querySelector("#cross"),menu=document.querySelector(".left_menu"),cross_div=document.querySelector(".exit");cross.addEventListener("click",function(){"true"==this.getAttribute("data-open")?(this.setAttribute("data-open",!1),menu.classList.remove("active"),cross_div.classList.remove("active")):(this.setAttribute("data-open",!0),menu.classList.add("active"),cross_div.classList.add("active"))});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
