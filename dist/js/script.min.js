"use strict";function geodGBL(){var e;"undefined"==(e=void 0===EARTH_A?"undefined":_typeof(EARTH_A))&&wgs84()}function earthcon(e,t){var a,r,s,n,i;n=Number(e),i=Number(t),a=1-i/n,s=1-i*i/(n*n),r=Math.sqrt(s),EARTH_A=n,EARTH_B=i,EARTH_F=a,EARTH_Ecc=r,EARTH_Esq=s}function wgs84(){var e,t,a;e=6378.137,a=1/298.257223563,t=e*(1-a),earthcon(e,t)}function radcur(e){var t,a,r,s,n,i,o,l,u,c,p,h,m,d,v,f,_=new Array(3),b=Math.PI/180;return geodGBL(),t=EARTH_A,a=EARTH_B,s=t*t,n=a*a,i=1-n/s,Math.sqrt(i),r=Number(e),o=Math.cos(b*r),l=Math.sin(b*r),u=1-i*l*l,c=Math.sqrt(u),p=t/c,h=p*(1-i)/u,m=p*o,f=(1-i)*p*l,d=m*m+f*f,v=Math.sqrt(d),_[0]=v,_[1]=p,_[2]=h,_}function rearth(e){var t,a;return a=Number(e),t=radcur(a),t[0]}function gc2gd(e,t){var a,r,s,n,i,o,l,u,c,p=Math.PI/180,h=1/p,m=new Array(3);return geodGBL(),r=Number(e),s=Number(t),i=EARTH_Ecc,o=i*i,u=s,m=radcur(r),n=m[1],c=1-o*n/(n+u),l=Math.tan(p*r)/c,a=h*Math.atan(l),m=radcur(a),n=m[1],c=1-o*n/(n+u),l=Math.tan(p*r)/c,a=h*Math.atan(l)}function gd2gc(e,t){var a,r,s,n,i,o,l,u,c=Math.PI/180,p=1/c,h=new Array(3);return geodGBL(),a=Number(e),r=Number(t),n=EARTH_Ecc,i=n*n,l=r,h=radcur(a),s=h[1],u=1-i*s/(s+l),o=Math.tan(c*a)*u,p*Math.atan(o)}function llenu(e,t){var a,r,s,n,i,o,l,u=new Array(3),c=new Array(3),p=new Array(3),h=new Array(3),s=Math.PI/180;return a=Number(e),r=Number(t),n=Math.cos(s*a),i=Math.sin(s*a),o=Math.cos(s*r),l=Math.sin(s*r),u[0]=-l,u[1]=o,u[2]=0,c[0]=-o*i,c[1]=-l*i,c[2]=n,p[0]=o*n,p[1]=l*n,p[2]=i,h[0]=u,h[1]=c,h[2]=p,h}function xyzllh(e){var t,a,r,s,n,i,o,l,u,c,p,h,m,d,v,f,_,b,y,S=Math.PI/180,g=new Array(3),w=new Array(3);if(geodGBL(),d=EARTH_Esq,i=e[0],o=e[1],l=e[2],i=Number(i),o=Number(o),l=Number(l),n=Math.sqrt(i*i+o*o+l*l),t=Math.asin(l/n)/S,p=Math.abs(i)+Math.abs(o),b=p<1e-10?0:Math.atan2(o,i)/S,b<0&&(b+=360),(u=Math.sqrt(i*i+o*o))<1e-10)return _=90,l<0&&(_=-90),y=n-rearth(_),w[0]=_,w[1]=b,w[2]=y,w;s=rearth(t),y=n-s,_=gc2gd(t,y),g=radcur(_),m=g[1];for(var h=0;h<5&&(f=Math.sin(S*_),c=(l+m*d*f)/u,a=Math.atan(c)/S,r=a-_,_=a,v=Math.cos(S*_),g=radcur(_),m=g[1],y=u/v-m,!(Math.abs(r)<1e-12));h++);return w[0]=_,w[1]=b,w[2]=y,w}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function filter_date(e){for(var t=0;t<satellites.length;t++){var a=new Date(satellites[t].date),a=a.getFullYear();e[0]>a||e[1]<a?satellites[t].object.show=!1:satellites[t].object.show=!0}}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},EARTH_A,EARTH_B,EARTH_F,EARTH_Ecc,EARTH_Esq,_createClass=function(){function e(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,a,r){return a&&e(t.prototype,a),r&&e(t,r),t}}(),viewer=new Cesium.Viewer("cesiumContainer",{fullscreenButton:!1,baseLayerPicker:!1,timeline:!1,homeButton:!1,infoBoxe:!1,navigationHelpButton:!1,selectionIndicator:!1,vrButton:!1,geocoder:!1,sceneModePicker:!1,animation:!1,skyAtmosphere:!1,imageryProvider:new Cesium.ArcGisMapServerImageryProvider({url:"https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer"})});document.querySelector(".cesium-viewer-bottom").style.display="none",viewer.scene._screenSpaceCameraController.minimumZoomDistance=1e7,viewer.scene._screenSpaceCameraController.maximumZoomDistance=3e8;var cross=document.querySelector("#cross"),menu=document.querySelector(".left_menu"),cross_div=document.querySelector(".exit");cross.addEventListener("click",function(){"true"==this.getAttribute("data-open")?(this.setAttribute("data-open",!1),menu.classList.remove("active"),cross_div.classList.remove("active")):(this.setAttribute("data-open",!0),menu.classList.add("active"),cross_div.classList.add("active"))});for(var sat=function(){function e(t,a,r,s,n){_classCallCheck(this,e);this.name=t,this.date=r,this.id=a,this.true_pos=n,this.pos=xyzllh(n),this.infos=s,this.object=new Cesium.Entity({id:this.id,name:this.name,position:new Cesium.Cartesian3.fromDegrees(this.pos[0],this.pos[1],1e3*this.pos[2]),ellipsoid:{radii:new Cesium.Cartesian3(7e4,7e4,7e4),material:Cesium.Color.RED},label:{text:this.name,font:"10pt arial",style:Cesium.LabelStyle.FILL_AND_OUTLINE,outlineWidth:2,verticalOrigin:Cesium.VerticalOrigin.BOTTOM,pixelOffset:new Cesium.Cartesian2(0,-25)}}),this.popup=document.createElement("div"),this.popup.className="pop-up",this.popup.appendChild(document.createElement("div")),this.popup.children[0].className="pop-up-container",void 0==this.infos.country?this.popup.children[0].innerHTML='<p class="name">'+this.name+"</p><p>Launched on the "+this.date+"</p><p>No more data found on this satellite</p>":this.popup.children[0].innerHTML='<p class="name">'+this.name+"</p><p>Launched on the "+this.date+"</p><p>Organisation : "+this.infos.country+"</p><p>Mass : "+this.infos.mass+"</p><p>"+this.infos.description+"</p>",this.create()}return _createClass(e,[{key:"create",value:function(){viewer.entities.add(this.object)}}]),e}(),satellites=[],i=0;i<sats.length;i++)satellites.push(new sat(sats[i].name,sats[i].id,sats[i].date,sats[i].infos,sats[i].pos));var last_popup,handler_click=new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas);handler_click.setInputAction(function(e){var t=viewer.scene.pick(e.position);if(Cesium.defined(t))for(var a=0;a<satellites.length;a++)!function(e){t.id===satellites[e].object&&last_popup!==satellites[e].popup&&(void 0!==last_popup&&(last_popup.className="pop-up pop-up-anim-reverse",setTimeout(function(){document.querySelector("body").removeChild(last_popup),last_popup=void 0},300)),document.querySelector("body").appendChild(satellites[e].popup),satellites[e].popup.className="pop-up pop-up-anim",setTimeout(function(){last_popup=satellites[e].popup},300))}(a);else void 0!==last_popup&&(last_popup.className="pop-up pop-up-anim-reverse",setTimeout(function(){document.querySelector("body").removeChild(last_popup),last_popup=void 0},300))},Cesium.ScreenSpaceEventType.LEFT_CLICK);var last_hover,handler_hover=new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas);handler_hover.setInputAction(function(e){var t=viewer.scene.pick(e.endPosition);if(Cesium.defined(t))for(var a=0;a<satellites.length;a++)t.id===satellites[a].object&&t.id!==last_hover&&(void 0!==last_hover&&(last_hover._label._font._value="10pt arial"),satellites[a].object._label._font._value="15pt arial",last_hover=satellites[a].object);else void 0!==last_hover&&(last_hover._label._font._value="10pt arial",last_hover=void 0)},Cesium.ScreenSpaceEventType.MOUSE_MOVE);var parent=document.querySelector(".range-slider"),rangeS=parent.querySelectorAll("input[type=range]"),numberS=parent.querySelectorAll("input[type=number]");rangeS.forEach(function(e){e.oninput=function(){var e=parseFloat(rangeS[0].value),t=parseFloat(rangeS[1].value);if(e>t){var a=[t,e];e=a[0],t=a[1]}numberS[0].value=e,numberS[1].value=t,filter_date([numberS[0].value,numberS[1].value])}}),numberS.forEach(function(e){e.onblur=function(){var e=parseFloat(numberS[0].value),t=parseFloat(numberS[1].value);if(e>t){var a=e;numberS[0].value=t,numberS[1].value=a}rangeS[0].value=e,rangeS[1].value=t,filter_date([rangeS[0].value,rangeS[1].value])},e.onkeyup=function(){13==event.keyCode&&e.blur()}});var select_org=document.querySelector("select");select_org.onchange=function(){for(var e=0;e<satellites.length;e++)"Organisation"==this.value?satellites[e].object.show=!0:"Others"==this.value?"Pas de donnÃ©es"!=satellites[e].infos?satellites[e].object.show=!1:satellites[e].object.show=!0:satellites[e].infos.country==this.value?satellites[e].object.show=!0:satellites[e].object.show=!1};var search=document.querySelector("#name");search.onchange=function(){for(var e=this.value.toLowerCase(),t=0;t<satellites.length;t++)satellites[t].name.toLowerCase().includes(e)?satellites[t].object.show=!0:satellites[t].object.show=!1};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
