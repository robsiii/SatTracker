"use strict";function geodGBL(){var e;"undefined"==(e=void 0===EARTH_A?"undefined":_typeof(EARTH_A))&&wgs84()}function earthcon(e,t){var a,r,n,s,i;s=Number(e),i=Number(t),a=1-i/s,n=1-i*i/(s*s),r=Math.sqrt(n),EARTH_A=s,EARTH_B=i,EARTH_F=a,EARTH_Ecc=r,EARTH_Esq=n}function wgs84(){var e,t,a;e=6378.137,a=1/298.257223563,t=e*(1-a),earthcon(e,t)}function radcur(e){var t,a,r,n,s,i,o,l,u,c,h,d,m,p,v,f,b=new Array(3),y=Math.PI/180;return geodGBL(),t=EARTH_A,a=EARTH_B,n=t*t,s=a*a,i=1-s/n,Math.sqrt(i),r=Number(e),o=Math.cos(y*r),l=Math.sin(y*r),u=1-i*l*l,c=Math.sqrt(u),h=t/c,d=h*(1-i)/u,m=h*o,f=(1-i)*h*l,p=m*m+f*f,v=Math.sqrt(p),b[0]=v,b[1]=h,b[2]=d,b}function rearth(e){var t,a;return a=Number(e),t=radcur(a),t[0]}function gc2gd(e,t){var a,r,n,s,i,o,l,u,c,h=Math.PI/180,d=1/h,m=new Array(3);return geodGBL(),r=Number(e),n=Number(t),i=EARTH_Ecc,o=i*i,u=n,m=radcur(r),s=m[1],c=1-o*s/(s+u),l=Math.tan(h*r)/c,a=d*Math.atan(l),m=radcur(a),s=m[1],c=1-o*s/(s+u),l=Math.tan(h*r)/c,a=d*Math.atan(l)}function gd2gc(e,t){var a,r,n,s,i,o,l,u,c=Math.PI/180,h=1/c,d=new Array(3);return geodGBL(),a=Number(e),r=Number(t),s=EARTH_Ecc,i=s*s,l=r,d=radcur(a),n=d[1],u=1-i*n/(n+l),o=Math.tan(c*a)*u,h*Math.atan(o)}function llenu(e,t){var a,r,n,s,i,o,l,u=new Array(3),c=new Array(3),h=new Array(3),d=new Array(3),n=Math.PI/180;return a=Number(e),r=Number(t),s=Math.cos(n*a),i=Math.sin(n*a),o=Math.cos(n*r),l=Math.sin(n*r),u[0]=-l,u[1]=o,u[2]=0,c[0]=-o*i,c[1]=-l*i,c[2]=s,h[0]=o*s,h[1]=l*s,h[2]=i,d[0]=u,d[1]=c,d[2]=h,d}function xyzllh(e){var t,a,r,n,s,i,o,l,u,c,h,d,m,p,v,f,b,y,g,_=Math.PI/180,w=new Array(3),A=new Array(3);if(geodGBL(),p=EARTH_Esq,i=e[0],o=e[1],l=e[2],i=Number(i),o=Number(o),l=Number(l),s=Math.sqrt(i*i+o*o+l*l),t=Math.asin(l/s)/_,h=Math.abs(i)+Math.abs(o),y=h<1e-10?0:Math.atan2(o,i)/_,y<0&&(y+=360),(u=Math.sqrt(i*i+o*o))<1e-10)return b=90,l<0&&(b=-90),g=s-rearth(b),A[0]=b,A[1]=y,A[2]=g,A;n=rearth(t),g=s-n,b=gc2gd(t,g),w=radcur(b),m=w[1];for(var d=0;d<5&&(f=Math.sin(_*b),c=(l+m*p*f)/u,a=Math.atan(c)/_,r=a-b,b=a,v=Math.cos(_*b),w=radcur(b),m=w[1],g=u/v-m,!(Math.abs(r)<1e-12));d++);return A[0]=b,A[1]=y,A[2]=g,A}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function filter_date(e){for(var t=0;t<satellites.length;t++){var a=new Date(satellites[t].date),a=a.getFullYear();e[0]>a||e[1]<a?satellites[t].object.show=!1:satellites[t].object.show=!0}}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},EARTH_A,EARTH_B,EARTH_F,EARTH_Ecc,EARTH_Esq,_createClass=function(){function e(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,a,r){return a&&e(t.prototype,a),r&&e(t,r),t}}(),viewer=new Cesium.Viewer("cesiumContainer",{fullscreenButton:!1,baseLayerPicker:!1,timeline:!1,homeButton:!1,infoBoxe:!1,navigationHelpButton:!1,selectionIndicator:!1,vrButton:!1,geocoder:!1,sceneModePicker:!1,animation:!1,skyAtmosphere:!1});document.querySelector(".cesium-viewer-bottom").style.display="none";var cross=document.querySelector("#cross"),menu=document.querySelector(".left_menu"),cross_div=document.querySelector(".exit");cross.addEventListener("click",function(){"true"==this.getAttribute("data-open")?(this.setAttribute("data-open",!1),menu.classList.remove("active"),cross_div.classList.remove("active")):(this.setAttribute("data-open",!0),menu.classList.add("active"),cross_div.classList.add("active"))});for(var sat=function(){function e(t,a,r,n,s){_classCallCheck(this,e);this.name=t,this.date=r,this.id=a,this.true_pos=s,this.pos=xyzllh(s),this.infos=n,this.object=new Cesium.Entity({id:this.id,name:this.name,position:new Cesium.Cartesian3.fromDegrees(this.pos[0],this.pos[1],1e3*this.pos[2]),ellipsoid:{radii:new Cesium.Cartesian3(7e4,7e4,7e4),material:Cesium.Color.GREEN},label:{text:this.name,font:"10pt arial",style:Cesium.LabelStyle.FILL_AND_OUTLINE,outlineWidth:2,verticalOrigin:Cesium.VerticalOrigin.BOTTOM,pixelOffset:new Cesium.Cartesian2(0,-25)}}),this.popup=document.createElement("div"),this.popup.className="test",this.create()}return _createClass(e,[{key:"create",value:function(){viewer.entities.add(this.object)}}]),e}(),satellites=[],i=0;i<sats.length;i++)satellites.push(new sat(sats[i].name,sats[i].id,sats[i].date,sats[i].infos,sats[i].pos));console.log(satellites);var last_popup,handler=new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas);handler.setInputAction(function(e){for(var t=viewer.scene.pick(e.position),a=0;a<satellites.length;a++)Cesium.defined(t)&&t.id==satellites[a].object&&(void 0!=last_popup&&document.querySelector("body").removeChild(last_popup),document.querySelector("body").appendChild(satellites[a].popup),last_popup=satellites[a].popup)},Cesium.ScreenSpaceEventType.LEFT_CLICK);var parent=document.querySelector(".range-slider"),rangeS=parent.querySelectorAll("input[type=range]"),numberS=parent.querySelectorAll("input[type=number]");rangeS.forEach(function(e){e.oninput=function(){var e=parseFloat(rangeS[0].value),t=parseFloat(rangeS[1].value);if(e>t){var a=[t,e];e=a[0],t=a[1]}numberS[0].value=e,numberS[1].value=t,filter_date([numberS[0].value,numberS[1].value])}}),numberS.forEach(function(e){e.onblur=function(){var e=parseFloat(numberS[0].value),t=parseFloat(numberS[1].value);if(e>t){var a=e;numberS[0].value=t,numberS[1].value=a}rangeS[0].value=e,rangeS[1].value=t,filter_date([rangeS[0].value,rangeS[1].value])},e.onkeyup=function(){13==event.keyCode&&e.blur()}});var select_org=document.querySelector("select");select_org.onchange=function(){for(var e=0;e<satellites.length;e++)"Organisation"==this.value?satellites[e].object.show=!0:"Others"==this.value?"Pas de donnÃ©es"!=satellites[e].infos?satellites[e].object.show=!1:satellites[e].object.show=!0:satellites[e].infos.country==this.value?satellites[e].object.show=!0:satellites[e].object.show=!1};var search=document.querySelector("#name");search.onchange=function(){for(var e=this.value.toLowerCase(),t=0;t<satellites.length;t++)satellites[t].name.toLowerCase().includes(e)?satellites[t].object.show=!0:satellites[t].object.show=!1};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
