"use strict";function geodGBL(){var e;"undefined"==(e=void 0===EARTH_A?"undefined":_typeof(EARTH_A))&&wgs84()}function earthcon(e,t){var r,a,n,o,i;o=Number(e),i=Number(t),r=1-i/o,n=1-i*i/(o*o),a=Math.sqrt(n),EARTH_A=o,EARTH_B=i,EARTH_F=r,EARTH_Ecc=a,EARTH_Esq=n}function wgs84(){var e,t,r;e=6378.137,r=1/298.257223563,t=e*(1-r),earthcon(e,t)}function radcur(e){var t,r,a,n,o,i,u,c,s,h,l,m,f,M,d,y,A=new Array(3),E=Math.PI/180;return geodGBL(),t=EARTH_A,r=EARTH_B,n=t*t,o=r*r,i=1-o/n,Math.sqrt(i),a=Number(e),u=Math.cos(E*a),c=Math.sin(E*a),s=1-i*c*c,h=Math.sqrt(s),l=t/h,m=l*(1-i)/s,f=l*u,y=(1-i)*l*c,M=f*f+y*y,d=Math.sqrt(M),A[0]=d,A[1]=l,A[2]=m,A}function rearth(e){var t,r;return r=Number(e),t=radcur(r),t[0]}function gc2gd(e,t){var r,a,n,o,i,u,c,s,h,l=Math.PI/180,m=1/l,f=new Array(3);return geodGBL(),a=Number(e),n=Number(t),i=EARTH_Ecc,u=i*i,s=n,f=radcur(a),o=f[1],h=1-u*o/(o+s),c=Math.tan(l*a)/h,r=m*Math.atan(c),f=radcur(r),o=f[1],h=1-u*o/(o+s),c=Math.tan(l*a)/h,r=m*Math.atan(c)}function gd2gc(e,t){var r,a,n,o,i,u,c,s,h=Math.PI/180,l=1/h,m=new Array(3);return geodGBL(),r=Number(e),a=Number(t),o=EARTH_Ecc,i=o*o,c=a,m=radcur(r),n=m[1],s=1-i*n/(n+c),u=Math.tan(h*r)*s,l*Math.atan(u)}function llenu(e,t){var r,a,n,o,i,u,c,s=new Array(3),h=new Array(3),l=new Array(3),m=new Array(3),n=Math.PI/180;return r=Number(e),a=Number(t),o=Math.cos(n*r),i=Math.sin(n*r),u=Math.cos(n*a),c=Math.sin(n*a),s[0]=-c,s[1]=u,s[2]=0,h[0]=-u*i,h[1]=-c*i,h[2]=o,l[0]=u*o,l[1]=c*o,l[2]=i,m[0]=s,m[1]=h,m[2]=l,m}function xyzllh(e){var t,r,a,n,o,i,u,c,s,h,l,m,f,M,d,y,A,E,b,_=Math.PI/180,v=new Array(3),w=new Array(3);if(geodGBL(),M=EARTH_Esq,i=e[0],u=e[1],c=e[2],i=Number(i),u=Number(u),c=Number(c),o=Math.sqrt(i*i+u*u+c*c),t=Math.asin(c/o)/_,l=Math.abs(i)+Math.abs(u),E=l<1e-10?0:Math.atan2(u,i)/_,E<0&&(E+=360),(s=Math.sqrt(i*i+u*u))<1e-10)return A=90,c<0&&(A=-90),b=o-rearth(A),w[0]=A,w[1]=E,w[2]=b,w;n=rearth(t),b=o-n,A=gc2gd(t,b),v=radcur(A),f=v[1];for(var m=0;m<5&&(y=Math.sin(_*A),h=(c+f*M*y)/s,r=Math.atan(h)/_,a=r-A,A=r,d=Math.cos(_*A),v=radcur(A),f=v[1],b=s/d-f,!(Math.abs(a)<1e-12));m++);return w[0]=A,w[1]=E,w[2]=b,w}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},EARTH_A,EARTH_B,EARTH_F,EARTH_Ecc,EARTH_Esq,viewer=new Cesium.Viewer("cesiumContainer",{fullscreenButton:!1,baseLayerPicker:!1,timeline:!1,homeButton:!1,infoBoxe:!1,navigationHelpButton:!1,selectionIndicator:!1,vrButton:!1,geocoder:!1,sceneModePicker:!1,animation:!1}),blueEllipsoid=viewer.entities.add({name:"Blue ellipsoid",position:Cesium.Cartesian3.fromDegrees(-114,40,4e5),ellipsoid:{radii:new Cesium.Cartesian3(1e5,1e5,1e5),material:Cesium.Color.BLUE}});document.querySelector(".cesium-viewer-bottom").style.display="none";var ecef=[100,100,100];console.log(xyzllh(ecef));var sat=function e(t){_classCallCheck(this,e),this.name=t},satellites=[];
//# sourceMappingURL=data:application/json;charset=utf8;base64,
